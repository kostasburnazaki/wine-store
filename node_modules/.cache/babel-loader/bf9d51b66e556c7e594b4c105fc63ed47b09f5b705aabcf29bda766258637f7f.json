{"ast":null,"code":"const BASE_URL = 'https://wine-shop-backend-production.up.railway.app/';\nconst DATABASE_ENDPOINT = 'wines';\nfunction handleErrors(response) {\n  var _response$headers, _response$headers$get;\n  console.log(response);\n  if (!response.ok) {\n    return Promise.reject(new Error(`${response.status} - ${response.statusText}`));\n  }\n  if (!(response !== null && response !== void 0 && (_response$headers = response.headers) !== null && _response$headers !== void 0 && (_response$headers$get = _response$headers.get('content-type')) !== null && _response$headers$get !== void 0 && _response$headers$get.includes('application/json'))) {\n    return Promise.reject(new Error('Content type is not supported'));\n  }\n  ;\n  return response;\n}\n;\nfunction request(url) {\n  // const params = {\n  //   \"additionalProp1\": \"str\",\n  //   \"additionalProp2\": \"str\",\n  //   \"additionalProp3\": \"str\",\n  // }\n  const options = {\n    method: 'GET'\n  };\n  // const addUrl = '?' + (new URLSearchParams(params)).toString();\n  return fetch(BASE_URL + url, options).then(response => {\n    var _response$body;\n    return (_response$body = response.body) === null || _response$body === void 0 ? void 0 : _response$body.getReader();\n  });\n}\n;\n// return handleErrors(response).json();\n\nexport const fetchClient = {\n  getDatabase: () => request(DATABASE_ENDPOINT)\n};","map":{"version":3,"names":["BASE_URL","DATABASE_ENDPOINT","handleErrors","response","_response$headers","_response$headers$get","console","log","ok","Promise","reject","Error","status","statusText","headers","get","includes","request","url","options","method","fetch","then","_response$body","body","getReader","fetchClient","getDatabase"],"sources":["C:/Users/Kosntantin/Documents/mate/wine-store/src/utils/Api.tsx"],"sourcesContent":["import { Item } from \"../types/Item\";\n\nconst BASE_URL = 'https://wine-shop-backend-production.up.railway.app/';\nconst DATABASE_ENDPOINT = 'wines';\n\nfunction handleErrors(response: any) {\n  console.log(response);\n  if (!response.ok) {\n    return Promise.reject(\n      new Error(`${response.status} - ${response.statusText}`)\n    );\n  }\n\n  if (!response?.headers?.get('content-type')?.includes('application/json')) {\n    return Promise.reject(\n      new Error('Content type is not supported')\n    )\n  };\n\n  return response;\n};\n\nfunction request<T>(url: string): Promise<any> {\n  // const params = {\n  //   \"additionalProp1\": \"str\",\n  //   \"additionalProp2\": \"str\",\n  //   \"additionalProp3\": \"str\",\n  // }\n  const options: RequestInit = {\n    method: 'GET',\n  }\n  // const addUrl = '?' + (new URLSearchParams(params)).toString();\n  return fetch(BASE_URL + url, options)\n    .then(response => response.body?.getReader())\n  };\n  // return handleErrors(response).json();\n\nexport const fetchClient = {\n  getDatabase: () => request<Item[]>(DATABASE_ENDPOINT),\n}"],"mappings":"AAEA,MAAMA,QAAQ,GAAG,sDAAsD;AACvE,MAAMC,iBAAiB,GAAG,OAAO;AAEjC,SAASC,YAAYA,CAACC,QAAa,EAAE;EAAA,IAAAC,iBAAA,EAAAC,qBAAA;EACnCC,OAAO,CAACC,GAAG,CAACJ,QAAQ,CAAC;EACrB,IAAI,CAACA,QAAQ,CAACK,EAAE,EAAE;IAChB,OAAOC,OAAO,CAACC,MAAM,CACnB,IAAIC,KAAK,CAAE,GAAER,QAAQ,CAACS,MAAO,MAAKT,QAAQ,CAACU,UAAW,EAAC,CAAC,CACzD;EACH;EAEA,IAAI,EAACV,QAAQ,aAARA,QAAQ,gBAAAC,iBAAA,GAARD,QAAQ,CAAEW,OAAO,cAAAV,iBAAA,gBAAAC,qBAAA,GAAjBD,iBAAA,CAAmBW,GAAG,CAAC,cAAc,CAAC,cAAAV,qBAAA,eAAtCA,qBAAA,CAAwCW,QAAQ,CAAC,kBAAkB,CAAC,GAAE;IACzE,OAAOP,OAAO,CAACC,MAAM,CACnB,IAAIC,KAAK,CAAC,+BAA+B,CAAC,CAC3C;EACH;EAAC;EAED,OAAOR,QAAQ;AACjB;AAAC;AAED,SAASc,OAAOA,CAAIC,GAAW,EAAgB;EAC7C;EACA;EACA;EACA;EACA;EACA,MAAMC,OAAoB,GAAG;IAC3BC,MAAM,EAAE;EACV,CAAC;EACD;EACA,OAAOC,KAAK,CAACrB,QAAQ,GAAGkB,GAAG,EAAEC,OAAO,CAAC,CAClCG,IAAI,CAACnB,QAAQ;IAAA,IAAAoB,cAAA;IAAA,QAAAA,cAAA,GAAIpB,QAAQ,CAACqB,IAAI,cAAAD,cAAA,uBAAbA,cAAA,CAAeE,SAAS,EAAE;EAAA,EAAC;AAC/C;AAAC;AACD;;AAEF,OAAO,MAAMC,WAAW,GAAG;EACzBC,WAAW,EAAEA,CAAA,KAAMV,OAAO,CAAShB,iBAAiB;AACtD,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}